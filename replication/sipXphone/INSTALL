==============================================================================
               I N S T A L L A T I O N   I N S T R U C T I O N S 
==============================================================================

This document describes how to build and install sipXphone from source.  This
process is somewhat complicated and requires a number of 3rd party software 
packages and manual steps.  If you don't have the time or patience for this, 
please see SIPfoundry (www.sipfoundry.org) for binary distributions.

If you have questions or problems, please consult the latest version of this 
document, the sipXphone project page, and the sipX dev mailing list.  The 
sipX-dev mailing list is searchable - please search before posting your 
question.
  
  http://scm.sipfoundry.org/rep/sipXphone/main/INSTALL 
  http://www.sipfoundry.org/sipXphone/
  http://list.sipfoundry.org/mailman/listinfo/sipx-dev

For usage overviews, please see the README.

  http://scm.sipfoundry.org/rep/sipXphone/main/README 

Contents:

  Windows Instructions
    Installing 3rd party components
    Building C++ code
    Building Java code
    Updating environment variables
    Launching the softphone
	Troubleshooting: Build problems
  Linux Instructions
  
====================
Windows Instructions
====================

For the Windows platform, please ignore installation/build documentation in 
dependant sipX projects (sipXportLib, sipXtackLib, sipXmediaLib, sipXcallLib).
The top-level makefiles/projects will configure and build all of the dependant 
projects.

-------------------------------
Installing 3rd party components
-------------------------------

Required Software
-----------------
MSVC    - Microsoft Visual C++ v6.0 or better.  You must have service pack 5
          (or greater).
GLib2   - Low-level core library that forms the basis of GTK+ and GNOME
PCRE    - Perl Compatible Regular Expression Library
J2SDK   - Java2 Software Development Kit
Ant     - Build tool for Java.

Optional Software
-----------------
Cppunit - Unit testing framework for C++
JUnit   - Unit testing framework for Java
Doxygen - Source Code Documentation System

Installing Glib2
----------------
Latest tested version: 2.4.7

You will need the following glib packages/files:
  glib-2.4.7.zip : glib runtime environment
  glib-dev-2.4.7.zip : glib developer package
  libiconv-1.9.1.bin.woe32.zip : GNU libiconv
  gettext-runtime-0.13.1.zip : GNU gettext runtime for Win32
  
You can obtain these from Tor Lillqvist (maintains the Windows port of 
GLIB/GTK+) by pointing your browser at: 
   http://www.gimp.org/~tml/gimp/win32/downloads.html

Alternatively, you can download these files from SIPfoundry:
  http://www.sipfoundry.org/pub/sipXphone/depends/win32/  

Using your favorite archive utility, extract the contents of each file into
a new glib directory (e.g. "C:\glib").

Next add the glib paths to your MSVC environment (assuming installation into 
C:\glib):

Additional "Include files":
   C:\glib\include\glib-2.0
   C:\glib\lib\glib-2.0\include   

Additional "Library files":
   C:\glib\lib

In MSVC 6, select "Options" from the "Tools" menu, select the "Directories" 
tab, and then select either "Include files" or "Library files" from the 
right-aligned dropdown list.

In MSVC 7, select "Options" from the "Tools" menu, select the "Projects" 
folder, select "VC++ Directories", and then select either "Include files" or 
"Library files" from the right-aligned dropdown list.

Installing PCRE
---------------
Latest tested version: 4.4

You will need the following PCRE packages/files:  
  pcre-4.4-bin.exe : PCRE runtime environment
  pcre-4.4-lib.exe : PCRE development package
 
You can download the directly from gnuwin32 or from SIPfoundry:
  http://gnuwin32.sourceforge.net/packages/pcre.htm
  http://www.sipfoundry.org/pub/sipXphone/depends/win32/  
  
Install both packages.  Order may not matter, however, installating the runtime
environment first is known to work.

Next add the PCRE  paths to your MSVC environment (assuming installation into 
C:\Program Files\GnuWin32):

Additional "Include files":
   C:\Program Files\GnuWin32\include

Additional "Library files":
   C:\Program Files\GnuWin32\lib

See "Installing Glib2" for hints on adding include and library paths.
   
Installing Java
---------------
Latest tested version: 1.4.2_06

Download the J2SE SDK v 1.4.2_06 from Sun:
  http://java.sun.com/j2se/1.4.2/download.html

Follow the Java installation instructions and add the Java include and 
library paths to your MSVC environment (assuming installation into 
C:\j2sdk1.4.2_06):

Additional "Include files":
    C:\j2sdk1.4.2_06\include
    C:\j2sdk1.4.2_06\include\win32

Additional "Library files":
    C:\j2sdk1.4.2_06\lib

See "Installing Glib2" for hints on adding include and library paths.
   
Installing Ant
--------------
Latest tested version: 1.6.2

You will need the following Ant package:    
    apache-ant-1.6.2-bin.zip

Download Ant from either Apache Ant or SIPfoundry.org:
    http://ant.apache.org/index.html
    http://www.sipfoundry.org/pub/sipXphone/depends/win32/
       
Extract the contents of the .zip file into a directory on your file system and 
update your system environment:
  1) Define a environment variable named "ANT_HOME" that points to the ant's root 
     directory.  For example, if you extracted the archive into "C:\", then define
     ANT_HOME as "C:\apache-ant-1.6.2"
  2) Add the ant "bin" directory to your PATH (e.g. "C:\apache-ant-1.6.2\bin")
   
-----------------
Building C++ Code
-----------------

Open "sipXphone.dsw" in MSVC, verify that "sipXphone" is the default project
and build.  You should end up building "sipXphone.dll" and "launchix.exe".

------------------
Building Java Code
------------------

Using a command prompt, cd into the "javacore" directory.  Then type the following:
    ant -f build-wnt.xml deploy -Dversion=1.2.3 -Dbuild_number=4
    
Next, repeat the same command in the "softphone" directory.

Example:
  cd javacore
  ant -f build-wnt.xml deploy -Dversion=2.6.0 -Dbuild_number=34
  cd ..\softphone
  ant -f build-wnt.xml deploy -Dversion=2.6.0 -Dbuild_number=34
  
----------------------------
Adding Environment Variables
----------------------------

At runtime, the softphone needs to be able to find the libglib-2.0-o.dll, and 
related dependencies.  Add "c:\glib\bin", or the equivalent to your Windows 
PATH environment variable.  From a command prompt, this can be added by 
entering the following:
  PATH=%PATH%;c:\glib\bin
         
-----------------------
Launching the softphone
-----------------------

Standalone
----------
Presently, the softphone is most easily run from the development environment 
by running the "sipXphone.bat" batch file in the "softphone\bin" directory.

MSVC IDE
--------
To launch the softphone from the MSVC IDE, use the following settings:

Executable for debug session:
  C:\j2sdk1.4.2_06\jre\bin\java.exe
  (update with your installation path)

Working Directory:
  softphone\bin

Program Arguments:
  -ms6700000 -Dsoftphone.library.path=..\..\Debug\sipXphone.dll -Dsoftphone.skin.path=..\meta\Skins\Default -Xbootclasspath/a:..\..\javacore\lib\javacore.jar;..\lib\softphone.jar;..\..\lib\jtapi13.jar;..\..\jndi1.2.1.jar;..\..\ldap.jar;..\..\junit.jar;..\..\oromatch.jar org.sipfoundry.sipxphone.testbed.TestbedFrame ..\..\Debug\sipXphone.dll
  (expanded from sipXphone.bat)


-------------------------------
Troubleshooting: Build Problems
-------------------------------

error C2955: 'allocator' : use of class template requires template ...
----------------------------------------------------------------------
There seems to be a naming conflict between GLIB and and MSVC 6 (may also 
exist for 7.x).  If you run into this problem, please change the 4 GLIB
references of "allocator" to something different.  

For example, change

  "void g_node_push_allocator(GAllocator *allocator);"

to

  "void g_node_push_allocator(GAllocator *allocatorX);"

If using GLIB 2.4.7, you will need to modify these references:
...\glib\include\glib-2.0\glib\gmem.h - line 164
...\glib\include\glib-2.0\glib\glist.h - line 45
...\glib\include\glib-2.0\glib\gslist.h - line 44
...\glib\include\glib-2.0\glib\gnode.h - line 77


MSVC INTERNAL COMPILER ERROR
----------------------------

Update your version of Developer Studio to the latest available service pack. 
(Microsoft Update or .NET or download directly from MSDN for v6). 

==================
Linux Instructions
==================

  Coming soon.

Crude Notes:

Checkout out all of the required projects:

svn checkout http://scm.sipfoundry.org/rep/sipXportLib/main sipXportLib
svn checkout http://scm.sipfoundry.org/rep/sipXtackLib/main sipXtackLib
svn checkout http://scm.sipfoundry.org/rep/sipXmediaLib/main sipXmediaLib
svn checkout http://scm.sipfoundry.org/rep/sipXcallLib/main sipXcallLib
svn checkout http://scm.sipfoundry.org/rep/sipXphone/main sipXphone

Please INGORE the subprojects contained within sipXphone (sipXportLib, sipXtackLib, sipXmediaLib, sipXcallLib).  These sources are not yet used under Linux.

Build and install each project:

Replace sipXportLib with each of the projects names above (sipXportLib,
sipXtackLib, sipXmediaLib, sipXcallLib, sipXphone) :

  cd sipXportLib
  autoreconf --install --force
  ./configure --prefix=/tmp/sipXphone.test
  make 
  make install

For sipXmediaLib, please include "--enable-local-audio" parameter on the 
configure line:
  cd sipXmediaLib
  autoreconf --install --force
  ./configure --enable-local-audio --prefix=/tmp/sipXphone.test
  make
  make install

Following these steps results in "sipXphone.sh" script installed  in
"/tmp/sipXphone.test/bin".

---
Find a problem in these docs?  Have suggestions ... better yet a patch with
changes?  Please email sipX-dev AT sipfoundry.org or 
bandreasen AT pingtel.com.
