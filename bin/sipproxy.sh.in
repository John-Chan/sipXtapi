#!/bin/bash
#
# Copyright (C) 2004 SIPfoundry Inc.
# Licensed by SIPfoundry under the LGPL license.
#
# Copyright (C) 2004 Pingtel Corp.
# Licensed to SIPfoundry under a Contributor Agreement.

Action=RUN
Status=0
Args=""

while [ $# -ne 0 ]
do
    case ${1} in
        --configtest)
            Action=CONFIGTEST
            ;;

        *)
            Args="$Args $1"
            ;;
    esac           

    shift # always consume 1
done

dns_sipsrv () { # ( transport, domain )
  target=`echo _sip._$1.$2 | tr A-Z a-z`
  dig  -t srv +noidentify +nocmd +nocomments +noquestion +nostats +noauthority ${target} \
  | tr A-Z a-z \
  | awk "\$1 == \"${target}.\" { print \$NF }" \
  | sed 's/\.$//'
  }

dns_cname () { # ( domain )
  target=`echo $1 | tr A-Z a-z`
  dig  -t cname +noidentify +nocmd +nocomments +noquestion +nostats +noauthority ${target} \
  | tr A-Z a-z \
  | awk "\$1 == \"${target}.\" { print \$NF }" \
  | sed 's/\.$//'
  }

CONFIG_DEFS="@SIPX_CONFDIR@/config.defs"

CONFIG_FILES="\
  @SIPX_CONFDIR@/proxy-config \
  @SIPX_CONFDIR@/forwardingrules.xml \
  "

# If the "config.defs" file exists and the <name>.in file exists for a
# configuration file, then run the config preprocessor to generate the
# fully resolved configuration file.
if [ -f "$CONFIG_DEFS" ]
then
  for i in $CONFIG_FILES ; do
    if [ -f "${i}.in" ]
    then
       @bindir@/configpp --defs "${CONFIG_DEFS}" --in "${i}.in" --out "$i"
    fi
  done
fi

case ${Action} in
   RUN)
     echo $$ > @SIPX_RUNDIR@/sipproxy.pid
     exec @bindir@/sipproxy $Args
     ;;

   CONFIGTEST)
     #@bindir@/sipx-validate-xml @SIPX_CONFDIR@/forwardingrules.xml
     #Status=$?

     myHostname=`hostname -f`
     status=$? 
     Status=$((${Status}+${status}))
     
     myDomain=`. ${CONFIG_DEFS}; echo ${SIPXCHANGE_DOMAIN_NAME}`
     status=$? 
     Status=$((${Status}+${status}))

     if [ "${myHostname}" != "${myDomain}" ]
     then
         tcpSrv=`dns_sipsrv tcp ${myDomain}`
         udpSrv=`dns_sipsrv udp ${myDomain}`
         if [ "${myHostname}" != "${tcpSrv}" -a "${myHostname}" != "${udpSrv}" ] 
         then
             sipAlias=`dns_cname ${myDomain}`
             if [ "${myHostname}" != "${sipAlias}" ] 
             then
                 myIp=`@SIPX_BINDIR@/get_def_addr`
                 if [ "${myDomain}" != "${myIp}" ]  
                 then
                     Status=1
                     echo "    SIP route to SIPXCHANGE_DOMAIN_NAME '${myDomain}' is not to this host '${myHostname}' at ${myIp}" 1>&2
                     echo "    See the installation guide on setting the DNS SRV records and domain names" 1>&2
                 fi
             fi
         fi
     fi
     ;;
esac

exit $Status

