#!/bin/bash
#
# Copyright (C) 2004 SIPfoundry Inc.
# Licensed by SIPfoundry under the LGPL license.
#
# Copyright (C) 2004 Pingtel Corp.
# Licensed to SIPfoundry under a Contributor Agreement.

# Startup Script for Profile Generator Service
# Check for SUN(tm) JVM w/ HotSpot support

Action=RUN
Status=0
Args=""
SslDir=@sipxpbx.conf.dir@/ssl
AuthoritiesDir=$SslDir/authorities

while [ $# -ne 0 ]
do
    case ${1} in
        --configtest)
            Action=CONFIGTEST
            ;;

        *)
            Args="$Args $1"
            ;;
    esac           

    shift # always consume 1
done

CONFIG_DEFS="@sipxpbx.conf.dir@/config.defs"

CONFIG_FILES="\
  @sipxpbx.conf.dir@/sipxconfig.properties
  "

# If the "config.defs" file exists and the <name>.in file exists for a
# configuration file, then run the config preprocessor to generate the
# fully resolved configuration file.
if [ -f "$CONFIG_DEFS" ]
then
  for i in $CONFIG_FILES ; do
    if [ -f "${i}.in" ]
    then
       @bin.dir@/configpp --defs "${CONFIG_DEFS}" --in "${i}.in" --out "$i"
    fi
  done
fi

if [ ${Action} = CONFIGTEST ]
then
    # comment out until (benign?) xml errors are resolved
    #@bin.dir@/sipx-validate-xml @sipxpbx.conf.dir@/topology.xml
    #$Status=$(($Status+$?))

    exit 0
fi

echo $$ > @sipxpbx.run.dir@/sipxconfig.pid

# Create copies for files that are capable of being restored to original (XCF-96)
makeRestoreBackup() {
    if [ ! -f $1.default ]; then
      cp $1 $1.default
    fi
}

makeRestoreBackup @sipxpbx.conf.dir@/config.defs
makeRestoreBackup @sipxpbx.conf.dir@/proxy-config.in
makeRestoreBackup @sipxpbx.conf.dir@/registrar-config.in
makeRestoreBackup @sipxpbx.conf.dir@/status-config.in
makeRestoreBackup @sipxpbx.conf.dir@/authproxy-config.in

# List of authorities accepted system-wide
if [ -d $AuthoritiesDir ]
then
  TrustStore=$SslDir/authorities.jks
  Certificates=`find $AuthoritiesDir | egrep -i '.(crt|crl)$'`
  @bin.dir@/ssl-cert/create-ssl-truststore.sh --checksum $SslDir/.authorities-contents.md5 --truststore $TrustStore  $Certificates
  # password on command line is not security issue. cattrust and directory has appropriate
  # permissions, password is required by keystores
  TrustStoreOpts="\
      -Djavax.net.ssl.trustStore=$TrustStore \
      -Djavax.net.ssl.trustStoreType=JKS \
      -Djavax.net.ssl.trustStorePassword=changeit"
else
  # make empty as extra measure to ensure doesn't come from env. var
  # this is when Java's CA database has required certs
  TrustStoreOpts=""
fi

# append profilegenerator opts
JavaOpts="-server $JAVA_OPTS"


Classpath=@sipxpbx.conf.dir@
for jar in @sipxconfig.lib.dir@/*.jar ; do
   Classpath=$Classpath:$jar
done

JavaCmd=`@bin.dir@/sipx-config --java`
exec "$JavaCmd" $JavaOpts \
    $TrustStoreOpts \
    -classpath "$Classpath" \
    org.mortbay.jetty.Server @sipxpbx.conf.dir@/sipxconfig-jetty.xml
