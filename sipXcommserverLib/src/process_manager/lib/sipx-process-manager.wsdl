<?xml version="1.0"?>
<definitions xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:tns="urn:ProcessManagerService" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:si="http://soapinterop.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/"
  targetNamespace="urn:ProcessManagerService">

  <types>
    <xsd:schema targetNamespace="urn:ProcessManagerService">

      <xsd:complexType name="ArrayOfString">
        <xsd:complexContent>
          <xsd:restriction base="SOAP-ENC:Array">
            <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="xsd:string[]" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="ManageProcessesInput">
        <xsd:sequence>
          <xsd:element name="processes" type="tns:ArrayOfString" minOccurs="1" maxOccurs="1" />
          <xsd:element name="verb" type="xsd:string" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:simpleType name="ProcessStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="starting" />
          <xsd:enumeration value="started" />
          <xsd:enumeration value="stopping" />
          <xsd:enumeration value="stopped" />
          <xsd:enumeration value="failed" />
        </xsd:restriction>
      </xsd:simpleType>      

      <xsd:complexType name="NamedProcessStatus">
        <xsd:sequence>
          <xsd:element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" />
          <xsd:element name="status" type="tns:ProcessStatus" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ArrayOfNamedProcessStatus">
        <xsd:sequence>
          <xsd:element name="namedProcessStatus" type="tns:NamedProcessStatus" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:simpleType name="SipxDirectory">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="data" />    <!-- usually maps to /var/sipxdata/ -->
          <xsd:enumeration value="etc" />     <!-- usually maps to /etc/sipxpbx/ -->
          <xsd:enumeration value="log" />     <!-- usually maps to /var/log/sipxpbx/ -->
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:complexType name="FilePath">
        <xsd:sequence>
          <!-- Append the fileRelativePath to the mapped sipX directory to get
               the absolute path to the file -->
          <xsd:element name="sipXdir" type="tns:SipxDirectory" />
          <xsd:element name="fileRelativePath" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="ReadFileOutput">
        <xsd:sequence>
          <!-- fileText is the content read from the file, which is null if the read fails.
               status is 0 for success.  Any other value indicates failure. -->
          <xsd:element name="fileText" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="1" />
          <xsd:element name="status" type="xsd:int" minOccurs="1" maxOccurs="1" />          
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="WriteFileInput">
        <xsd:sequence>
          <!-- fileText is the content read from the file, which is null if the read fails.
               status is 0 for success.  Any other value indicates failure. -->
          <xsd:element name="filePath" type="tns:FilePath" minOccurs="1" maxOccurs="1" />
          <xsd:element name="fileText" type="xsd:string" minOccurs="1" maxOccurs="1" />          
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="WriteFileOutput">
        <xsd:sequence>
          <xsd:element name="status" type="xsd:int" minOccurs="1" maxOccurs="1" />          
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="DeleteFileInput">
        <xsd:sequence>
          <xsd:element name="filePath" type="tns:FilePath" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="DeleteFileOutput">
        <xsd:sequence>
          <xsd:element name="status" type="xsd:int" minOccurs="1" maxOccurs="1" />          
        </xsd:sequence>
      </xsd:complexType>

    </xsd:schema>
  </types>

  <message name="manageProcessesRequest">
    <part name="manageProcessesRequest" type="tns:ManageProcessesInput" />
  </message>
  <message name="manageProcessesResponse" />

  <message name="getProcessStatusRequest" />
  <message name="getProcessStatusResponse">
    <part name="getProcessStatusResponse" type="tns:ArrayOfNamedProcessStatus" />
  </message>

  <message name="readFileRequest">
    <part name="readFileRequest" type="tns:FilePath" />
  </message>    
  <message name="readFileResponse">
    <part name="readFileResponse" type="tns:ReadFileOutput" />
  </message>

  <message name="writeFileRequest">
    <part name="writeFileRequest" type="tns:WriteFileInput" />
  </message>    
  <message name="writeFileResponse">
    <part name="writeFileResponse" type="tns:WriteFileOutput" />
  </message>

  <message name="deleteFileRequest">
    <part name="deleteFileRequest" type="tns:DeleteFileInput" />
  </message>    
  <message name="deleteFileResponse">
    <part name="deleteFileResponse" type="tns:DeleteFileOutput" />
  </message>

  <portType name="ProcessManagerService">

    <operation name="manageProcesses">
      <input message="tns:manageProcessesRequest" />
      <output message="tns:manageProcessesResponse" />
    </operation>

    <operation name="getProcessStatus">
      <input message="tns:getProcessStatusRequest" />
      <output message="tns:getProcessStatusResponse" />
    </operation>

    <operation name="readFile">
      <input message="tns:readFileRequest" />
      <output message="tns:readFileResponse" />
    </operation>

    <operation name="writeFile">
      <input message="tns:writeFileRequest" />
      <output message="tns:writeFileResponse" />
    </operation>

    <operation name="deleteFile">
      <input message="tns:deleteFileRequest" />
      <output message="tns:deleteFileResponse" />
    </operation>

  </portType>

  <binding name="ProcessManagerBinding" type="tns:ProcessManagerService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />

    <operation name="manageProcesses">
      <soap:operation soapAction="urn:ProcessManagerService#manageProcesses" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="getProcessStatus">
      <soap:operation soapAction="urn:ProcessManagerService#getProcessStatus" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="readFile">
      <soap:operation soapAction="urn:ProcessManagerService#readFile" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="writeFile">
      <soap:operation soapAction="urn:ProcessManagerService#writeFile" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="deleteFile">
      <soap:operation soapAction="urn:ProcessManagerService#deleteFile" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

  </binding>

  <service name="ProcessManagerService">
    <documentation>Process Manager Service</documentation>
    <port name="ProcessManagerService" binding="tns:ProcessManagerBinding">
      <soap:address location="http://localhost:2000/" />
    </port>
  </service>
</definitions>
