<?xml version="1.0"?>
<definitions xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:pms="urn:ProcessManagerService"
  xmlns:dbs="urn:IMDBService"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:si="http://soapinterop.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/"
  targetNamespace="urn:ProcessManagerService">

  <types>
    <xsd:schema targetNamespace="urn:ProcessManagerService">

      <xsd:complexType name="ArrayOfString">
        <xsd:complexContent>
          <xsd:restriction base="SOAP-ENC:Array">
            <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="xsd:string[]" />
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="ManageProcessesInput">
        <xsd:sequence>
          <xsd:element name="processes" type="pms:ArrayOfString" minOccurs="1" maxOccurs="1" />
          <xsd:element name="verb" type="xsd:string" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:simpleType name="ProcessStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="starting" />
          <xsd:enumeration value="started" />
          <xsd:enumeration value="stopping" />
          <xsd:enumeration value="stopped" />
          <xsd:enumeration value="failed" />
        </xsd:restriction>
      </xsd:simpleType>      

      <xsd:complexType name="NamedProcessStatus">
        <xsd:sequence>
          <xsd:element name="name" type="xsd:string" minOccurs="1" maxOccurs="1" />
          <xsd:element name="status" type="pms:ProcessStatus" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ArrayOfNamedProcessStatus">
        <xsd:sequence>
          <xsd:element name="namedProcessStatus" type="pms:NamedProcessStatus" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:simpleType name="SipxDirectory">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="data" />           <!-- usually maps to /var/sipxdata/ -->
          <xsd:enumeration value="etc" />            <!-- usually maps to /etc/sipxpbx/ -->
          <xsd:enumeration value="log" />            <!-- usually maps to /var/log/sipxpbx/ -->
          <xsd:enumeration value="yum.repos.d" />    <!-- usually maps to /etc/yum.repos.d/ -->
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:complexType name="SipxFilePath">
        <xsd:sequence>
          <!-- Append the fileRelativePath to the mapped sipX directory to get
               the absolute path to the file -->
          <xsd:element name="sipXdir" type="pms:SipxDirectory" />
          <xsd:element name="fileRelativePath" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="ReadFileOutput">
        <xsd:sequence>
          <!-- fileText is the content read from the file, which is null if the read fails -->
          <xsd:element name="fileText" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="WriteFileInput">
        <xsd:sequence>
          <!-- fileText is the content read from the file, which is null if the read fails.
               status is 0 for success.  Any other value indicates failure. -->
          <xsd:element name="filePath" type="pms:SipxFilePath" minOccurs="1" maxOccurs="1" />
          <xsd:element name="fileText" type="xsd:string" minOccurs="1" maxOccurs="1" />          
        </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="DeleteFileInput">
        <xsd:sequence>
          <xsd:element name="filePath" type="pms:SipxFilePath" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

    </xsd:schema>

    <xsd:schema targetNamespace="urn:IMDBService">

      <xsd:complexType name="readSipDataInput">
        <xsd:sequence>
          <!-- Name of the sipdb database, e.g., registration, subscription, ... -->
          <xsd:element name="dbName" type="xsd:string" minOccurs="1" maxOccurs="1" />          
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="readSipDataOutput">
        <xsd:sequence>
          <!-- sipData is a string containing data read from the DB -->
          <xsd:element name="sipData" type="xsd:string" minOccurs="0" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="writeSipDataInput">
        <xsd:sequence>
          <!-- Name of the sipdb database, e.g., registration, subscription, ... -->
          <xsd:element name="dbName" type="xsd:string" minOccurs="1" maxOccurs="1" />          
          <xsd:element name="sipData" type="xsd:string" minOccurs="1" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

    </xsd:schema>

  </types>

  <message name="manageProcessesRequest">
    <part name="manageProcessesRequest" type="pms:ManageProcessesInput" />
  </message>
  <message name="manageProcessesResponse" />

  <message name="getProcessStatusRequest" />
  <message name="getProcessStatusResponse">
    <part name="getProcessStatusResponse" type="pms:ArrayOfNamedProcessStatus" />
  </message>

  <message name="readFileRequest">
    <part name="readFileRequest" type="pms:SipxFilePath" />
  </message>    
  <message name="readFileResponse">
    <part name="readFileResponse" type="pms:ReadFileOutput" />
  </message>

  <message name="writeFileRequest">
    <part name="writeFileRequest" type="pms:WriteFileInput" />
  </message>    
  <message name="writeFileResponse" />

  <message name="deleteFileRequest">
    <part name="deleteFileRequest" type="pms:DeleteFileInput" />
  </message>    
  <message name="deleteFileResponse" />

  <message name="readSipDataRequest">
    <part name="readSipDataRequest" type="dbs:readSipDataInput" />
  </message>
  <message name="readSipDataResponse">
    <part name="readSipDataResponse" type="dbs:readSipDataOutput" />
  </message>

  <message name="writeSipDataRequest">
    <part name="writeSipDataRequest" type="dbs:writeSipDataInput" />
  </message>  
  <message name="writeSipDataResponse" />

  <portType name="ProcessManagerService">

    <operation name="manageProcesses">
      <input message="pms:manageProcessesRequest" />
      <output message="pms:manageProcessesResponse" />
    </operation>

    <operation name="getProcessStatus">
      <input message="pms:getProcessStatusRequest" />
      <output message="pms:getProcessStatusResponse" />
    </operation>

    <operation name="readFile">
      <input message="pms:readFileRequest" />
      <output message="pms:readFileResponse" />
    </operation>

    <operation name="writeFile">
      <input message="pms:writeFileRequest" />
      <output message="pms:writeFileResponse" />
    </operation>

    <operation name="deleteFile">
      <input message="pms:deleteFileRequest" />
      <output message="pms:deleteFileResponse" />
    </operation>

  </portType>

  <portType name="IMDBService">

    <operation name="readSipData">
      <input message="dbs:readSipDataRequest" />
      <output message="dbs:readSipDataResponse" />
    </operation>

    <operation name="writeSipData">
      <input message="dbs:writeSipDataRequest" />
      <output message="dbs:writeSipDataResponse" />
    </operation>

  </portType>

  <binding name="ProcessManagerBinding" type="pms:ProcessManagerService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />

    <operation name="manageProcesses">
      <soap:operation soapAction="urn:ProcessManagerService#manageProcesses" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="getProcessStatus">
      <soap:operation soapAction="urn:ProcessManagerService#getProcessStatus" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="readFile">
      <soap:operation soapAction="urn:ProcessManagerService#readFile" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="writeFile">
      <soap:operation soapAction="urn:ProcessManagerService#writeFile" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

    <operation name="deleteFile">
      <soap:operation soapAction="urn:ProcessManagerService#deleteFile" />
      <input>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:ProcessManagerService" />
      </output>
    </operation>

  </binding>

  <binding name="IMDBBinding" type="pms:IMDBService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />

    <operation name="readSipData">
      <soap:operation soapAction="urn:IMDBService#readSipData" />
      <input>
        <soap:body use="literal" namespace="urn:IMDBService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:IMDBService" />
      </output>
    </operation>

    <operation name="writeSipData">
      <soap:operation soapAction="urn:IMDBService#writeSipData" />
      <input>
        <soap:body use="literal" namespace="urn:IMDBService" />
      </input>
      <output>
        <soap:body use="literal" namespace="urn:IMDBService" />
      </output>
    </operation>

  </binding>

  <service name="ProcessManagerService">
    <documentation>Process Manager Service</documentation>
    <port name="ProcessManagerService" binding="pms:ProcessManagerBinding">
      <soap:address location="http://localhost:2000/ProcessManager/services/ProcessManager" />
    </port>
  </service>

  <service name="IMDBService">
    <documentation>IMDB Service</documentation>
    <port name="IMDBService" binding="pms:IMDBBinding">
      <soap:address location="http://localhost:2000/ProcessManager/services/IMDB" />
    </port>
  </service>

</definitions>
