<?xml version='1.0' encoding='iso-8859-1' standalone='yes'?>
<!--
  - XML Schema for sipX mappingrules or fallbackrules rule set
  -->
<schema
    xmlns:dmp='http://www.sipfoundry.org/sipX/schema/xml/urlmap-00-00'
    targetNamespace='http://www.sipfoundry.org/sipX/schema/xml/urlmap-00-00'
    xmlns='http://www.w3.org/2001/XMLSchema'
    >
  <annotation>
    <documentation>
      Rules for mapping SIP addresses
    </documentation>
    <documentation source='http://scm.sipfoundry.org/rep/sipXregistry/main/doc/Redirection.txt'/>
  </annotation>

  <!-- Elements -->

  <element name='mappings'>
    <annotation>
      <documentation>
        Contains one or more hostMatch elements.
        Each hostMatch element is evaluated until one matches.
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element ref='dmp:hostMatch' minOccurs='0' maxOccurs='unbounded'/>
      </sequence>
    </complexType>
  </element>

  <element name='hostMatch'>
    <annotation>
      <documentation>
      A hostMatch may contain multiple hostPattern elements, 
      followed by a userMatch element.
      The host part of the target URI is compared with each hostPattern 
      until one matches.
      Despite the name, the contents of a hostPattern is not a pattern;
      The host part of the target URI must match the content of a
      hostPattern exactly.
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element ref='dmp:description' minOccurs='0' />
        <element ref='dmp:hostPattern' minOccurs='0' maxOccurs='unbounded'/>
        <element ref='dmp:userMatch'   minOccurs='0' maxOccurs='unbounded'/>
      </sequence>
    </complexType>
  </element>

  <simpleType name='dns_host_port'>
    <annotation>
      <documentation>
        Matches a DNS name (which includes an IPv4 address), 
        with an optional port number.
        This is a permissive match, in that it allows names that are not fully qualified.
      </documentation>
    </annotation>
    <restriction base="normalizedString">
      <pattern value="[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\.[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*(:[0-9]+)?" />
    </restriction>
  </simpleType>

  <element name='hostPattern' type='dmp:dns_host_port'>
    <annotation>
      <documentation>
        The host part of the target URI is compared with each hostPattern 
        until one matches.
        Despite the name, the contents of a hostPattern is not a pattern;
        The host part of the target URI must match the content of 
        a hostPattern exactly.
      </documentation>
    </annotation>
  </element>
  
  <element name='userMatch'>
    <annotation>
      <documentation>
        Contains a set of match specifiers for the user part of a SIP address
        and then other rules to be applied to any address that matches at least
        one of the specified userPattern specifiers.
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element ref='dmp:description' minOccurs='0' />
        <element ref='dmp:userPattern' minOccurs='0' maxOccurs='unbounded'/>
        <element ref='dmp:permissionMatch'   minOccurs='0' maxOccurs='unbounded'/>
      </sequence>
    </complexType>
  </element>

  <simpleType name='user_pattern'>
    <annotation>
      <documentation>
        Matches all characters valid in a SIP user part.
      </documentation>
    </annotation>
    <restriction base="normalizedString">
      <pattern value="([&#x3c;&#x3e;&#x22;a-zA-Z0-9.!&#x25;*_+`'~():\\/\[\]?{}\-]+)"/>
    </restriction>
  </simpleType>

  <element name='userPattern' type='dmp:user_pattern'>
    <annotation>
      <documentation>
        A pattern expression used to match the user part of a SIP URL.
        The contents of a userPattern is a sequence of characters that is matched 
        against the entire user part of the target URI.  
        The following characters are special in a userPattern:
           x   matches any single character
           .   matches any sequence of characters
          []   encloses a set of characters that match a single character
        Any other character matches only if it exactly matches the character
        in the target URI.
        Any of the special characters may be escaped 
        by prefixing with a backslash (\), in which case it matches only 
        if it exactly matches the character in the target URI. 
        Any other use of backslash is invalid, and is ignored.
        The pattern is implicitly anchored at both ends.
      </documentation>
    </annotation>
  </element>
  
  <element name='permissionMatch'>
    <annotation>
      <documentation>
        Contains a set of match specifiers for the user part of a SIP address
        and then other rules to be applied to any address that matches at least
        one of the specified user patterns.
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element ref='dmp:description' minOccurs='0' />
        <element ref='dmp:permission' minOccurs='0' maxOccurs='unbounded'/>
        <element ref='dmp:transform'  minOccurs='0' maxOccurs='unbounded'/>
      </sequence>
    </complexType>
  </element>

  <element name='permission' type='normalizedString'>
    <annotation>
      <documentation>
        A string that must match an existing permission token.  This applies
        to the permissions of the target URI, not the caller, so it can be used
        to create matches based on the capabilities of the called address.
      </documentation>
    </annotation>
  </element>

  <element name='transform'>
    <annotation>
      <documentation>
        Contains elements to construct the output address.

        In each of the output elements, these special strings are replaced
        as follows:

        {digits}       the full user part of the original URI
        {vdigits}      the the right substring of the orignial URI that begins
                       at the first non-constant character in the userPattern
                       that matched.
        {host}         the host part of the orignial URI
                       (including the port, if any)
        {headerparams} the full header parameters of the original URI
        {urlparams}    the full URL parameters of the original URI
        {uri}          the full original URI 

        The following special strings are deprecated - they are allowed now, 
        but may not be in the future; use is strongly discouraged:

        {localhost}    the URI of the local host
        {voicemail}    the host configured for the voicemail server
        {mediaserver}  the host configured for the media server
      </documentation>
    </annotation>
    <complexType>
      <choice>
        <element ref='dmp:url'          minOccurs='0' maxOccurs='1'>
          <annotation>
            <documentation>
              This specifies the complete Contact address.
            </documentation>
          </annotation>
        </element>
        <sequence>
          <annotation>
            <documentation>
              These elements allow substitution of or addition to the existing address
              any parts not explictly specified are copied from the input address.
            </documentation>
          </annotation>
          <element ref='dmp:user'         minOccurs='0' maxOccurs='1'/>
          <element ref='dmp:host'         minOccurs='0' maxOccurs='1'/>
          <element ref='dmp:urlparams'    minOccurs='0' maxOccurs='unbounded'/>
          <element ref='dmp:headerparams' minOccurs='0' maxOccurs='unbounded'/>
          <element ref='dmp:fieldparams'  minOccurs='0' maxOccurs='unbounded'/>
        </sequence>
      </choice>
    </complexType>
  </element>

  <element name='url' type='normalizedString'>
    <annotation>
      <documentation>
        The complete output SIP URL.

        In this element only, the value must be escaped as it would be when
        transmitted in a SIP message.
      </documentation>
    </annotation>
  </element>
  
  <element name='user' type='dmp:user_pattern'>
    <annotation>
      <documentation>
        The user portion of the output SIP URL.

        The value should not be escaped as it would be when transmitted in
        a SIP message; only escaping needed to make it valid XML should be used.
      </documentation>
    </annotation>
  </element>
  
  <element name='host' type='normalizedString'>
    <annotation>
      <documentation>
        The host portion of the output SIP URL.

        The value should not be escaped as it would be when transmitted in
        a SIP message; only escaping needed to make it valid XML should be used.
      </documentation>
    </annotation>
  </element>
  
  <element name='fieldparams' type='normalizedString'>
    <annotation>
      <documentation>
        A field parameter to be appended to the output SIP URL.

        It is not valid to specify a 'tag' field parameter.

        An 'expires' parameter, if specified, replaces any existing 'expires' 
        parameter rather than being appended.

        The value should not be escaped as it would be when transmitted in
        a SIP message; only escaping needed to make it valid XML should be used.
      </documentation>
    </annotation>
  </element>
  
  <element name='headerparams' type='normalizedString'>
    <annotation>
      <documentation>
        A header parameter to be appended to the output SIP URL.

        Certain parameters are not allowed
        (see SipMessage::SipMessageFieldProps::initDisallowedUrlHeaders).

        A Route header, if specified, is pushed as the topmost route (rather 
        than being appended, which would cause it to be the last route).

        The value should not be escaped as it would be when transmitted in
        a SIP message; only escaping needed to make it valid XML should be used.
      </documentation>
    </annotation>
  </element>
  
  <element name='urlparams' type='normalizedString'>
    <annotation>
      <documentation>
        A URL parameter to be appended to the output SIP URL.

        The value should not be escaped as it would be when transmitted in
        a SIP message; only escaping needed to make it valid XML should be used.
      </documentation>
    </annotation>
  </element>
  
  <element name='description' type='string'>
    <annotation>
      <documentation>
        Used to describe the rule in the user interface.
      </documentation>
    </annotation>
  </element>

</schema>

