
    ====================================
    SSL Key and Certificate Installation
    ====================================

  sipX relies on SSL to secure communications between some of its
  distributed components, and to protect parts of its web interfaces, so
  your installation requires an SSL key and certificate.

  Creating these files need only be done once, regardless of how many sipX
  components you are using.  (The installation instructions for each of the
  components that requires SSL direct you to these instructions.)  You can
  create these files at any time before you attempt to start sipX (or
  test the Apache component of sipX).

  There are two ways to create your certificate file; either requires that
  you create a local key for your server and a Certificate Signing Request
  (CSR).  The instructions below will help with these steps.  The two
  sources for a certificate are: 

    - Obtaining a certificate from a Certificate Authority
     or 
    - "Self-Certifying" (acting as your own Certificate Authority).

  Your company may have a source for certificates.  (If you have a secured
  web site, you almost certainly do.)  If so, and you are planning to use
  sipX in production, it is best to obtain a certificate from
  your existing Certificate Authority.

  If you do not have a relationship with a Certificate Authority, you can
  act as your own Certificate Authority.  This provides significant
  security to communications between the sipX components, but it is not as
  secure as using a certificate obtained from a Certificate Authority.

  This choice is not a permanent one - you can use self-certification as a
  temporary measure and switch to using a certificate from a Certificate
  Authority later.  To change the certificate, you must install new
  certificate and key files into sipX in the same way you installed the
  first set (which is described in some detail below). 

________________________________________________________________

Obtaining a certificate from a Certificate Authority

  This method is a little less quick and convenient for you to set up
  initially, because you must generate a Certificate Request and send it to
  the Certificate Authority to obtain your certificate.  However, it is
  probably more secure and is easier for your users because the browsers
  they use will probably already trust certificates issued this way.

  Your Certificate Authority may have its own instructions for how to
  generate a Certificate Request.  A sipX certificate is the same as a web
  server certificate, so follow the instructions from your CA on how to
  request a certificate to secure an Apache web server. 

  If your Certificate Authority has not given you instructions on how to
  generate a request, you can create a Certificate Signing Request and key
  by running the gen-ssl-keys.sh script.  (The details are listed below.)  

________________________________________________________________

Self-Certifying

  This method is quicker, but is slightly less secure because your
  certificate signing key is not protected by a Certificate Authority.
  Also, your users will see warning messages when they first access your
  server because the certificate is not derived from a well-known
  authority.  (They can choose to accept your certificate, which will
  eliminate future warnings.)

  To use this method, run the gen-ssl-keys.sh script and then follow the
  instructions under Key and Certificate Installation below.

________________________________________________________________

Running gen-ssl-keys.sh

  The gen-ssl-keys.sh script generates all of:

    - A private key for your server.

    - A certificate signing request (CSR) for your server
      based on that key you use to obtain a certificate from 
      a Certificate Authority.

    - A self-signed certificate for your server you can use
      without an outside Certificate Authority.

  gen-ssl-keys.sh is "safe"; it does not modify anything outside of the
  directory it is running in.  The actual installation of the certificate
  and key are described under Key and Certificate Installation below.

  To use gen-ssl-keys.sh:

  - Create a temporary directory and change into it.  For example:

    mkdir $HOME/sslkeys
    cd    $HOME/sslkeys

  - Run the script:

    gen-ssl-keys.sh

    It prompts you for the following information about your organization:

      Country Name (2 letter code) [] : 
      State or Province Name (full name) [] :
      Locality Name (eg, city) [] :
      Organization Name (eg, company) [] :
      Organization Unit Name (eg, section) [VoIP Services] :

    It also requests:

      CA Common Name (DNS name for CA) [] :

        If you are making a request to a Certificate Authority, provide
        its Common Name.  If you are self-certifying, provide the DNS
        domain name of your organization with a unique host name _not_
        the same as the name of your sipX server.

      Server Common Name (DNS name for Server) [] :

        Provide the DNS name of the sipX server.

      Email Contact Address for CA (name@example.org) [] :
        
        If you are making a request to a Certificate Authority, provide
        their e-mail contact address.  If you are self-certifying,
        provide the e-mail contact address for someone responsible for
        sipX.

      Email Contact Address for Server (name@example.org) [] :

        Provide the e-mail contact address for someone responsible for sipX.

________________________________________________________________

Key and Certificate Installation

  Well Known Certificate Authority method:

  The gen-ssl-keys script produces

     server key:
        This is your private key - it must be kept secret.

     server CSR:
        To obtain your key from a Certificate Authority, send the CSR
        file to your CA for signing.  Use the certificate the CA returns
        to you to replace the crt file produced by gen-ssl-keys, and then
        run this command as root in this directory:

  When the certificate file is ready, install these files by running:
 
        install-cert.sh --server-only <server-key-file>

  ____________________________________________________________________

  Self-signed CA method:

  There are some additional files used in this method:

     CA key:
        The CA key file MUST be kept as secure as you can make it.  It is
        the foundation of all the security provided by SSL.  You do not
        need regular access to this file, so moving it to offline storage
        would be an appropriate precaution.

     CA and Server certificates:
        To install these certificates and the server key on this system,
        run the following command as root in this directory.

        install-cert.sh <server-key-file>

