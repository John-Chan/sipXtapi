<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.sipfoundry.sipxconfig</groupId>
  <artifactId>web</artifactId>
  <packaging>war</packaging>
  <version>3.3.1</version>
  <name>sipXconfig web</name>
  <url>http://www.sipfoundry.org/sipXconfig</url>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>test</testSourceDirectory>
    <outputDirectory>../build/web/classes</outputDirectory>
    <testOutputDirectory>../build/web/tests</testOutputDirectory>
    <directory>../build/web</directory>
    <resources>
      <resource>
        <directory>src</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <!-- this may be an alternative to using maven-war-plugin configuration -->
      <!--resource>
        <directory>context</directory>        
      </resource-->
    </resources>
    <testResources>
      <testResource>
        <directory>test</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>../meta/checkstyle.xml</configLocation>
          <propertiesLocation> ../build/build.properties</propertiesLocation>
          <includes>src/org/sipfoundry/**/*.java</includes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
		          <sourceRoot>../build/web/dist/server-bindings-src</sourceRoot>
    		      <tasks>
                <ant antfile="build.xml" target="generate.server.bindings"/>
              </tasks>                
            </configuration>
            <goals>
              <goal>run</goal>              
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- this is a way of generating xml directly without using Ant - it does not work yet -->
      <!--plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>axistools-maven-plugin</artifactId>
        <configuration>
          <sourceDirectory>src/org/sipfoundry/sipxconfig/api</sourceDirectory>
          <outputDirectory>../build/web/dist/server-bindings-src</outputDirectory>
          <timestampDirectory>../build/web</timestampDirectory>
          <packageSpace>org.sipfoundry.sipxconfig.api</packageSpace>
          <serverSide>true</serverSide>
          <!- -noImports>true</noImports- ->
          <!- -noWrapped>true</noWrapped- ->
          <!- -allElements>true</allElements- ->
        	<!- -namespaceToPackage>urn:ConfigService org.sipfoundry.sipxconfig.api</namespaceToPackage- ->
          <!- -useEmitter>true</useEmitter- ->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>wsdl2java</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warSourceDirectory>context</warSourceDirectory>          
        </configuration>        
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.sipfoundry.sipxconfig</groupId>
      <artifactId>neoconf</artifactId>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>tapestry</groupId>
      <artifactId>tapestry</artifactId>
      <version>3.0.3</version>
    </dependency>
    <dependency>
      <groupId>tapestry</groupId>
      <artifactId>tapestry-contrib</artifactId>
      <version>3.0.3</version>
    </dependency>
    <dependency>
      <groupId>axis</groupId>
      <artifactId>axis</artifactId>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6</version>
      <scope>test</scope>      
    </dependency>
    <dependency>
      <groupId>jwebunit</groupId>
      <artifactId>jwebunit</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>    
    <dependency>
      <groupId>easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>easymock</groupId>
      <artifactId>easymockclassextension</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jetty</groupId>
      <artifactId>org.mortbay.jetty</artifactId>
      <version>5.1.4</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
			<version>2.4</version>      
    </dependency>    
  </dependencies>
</project>