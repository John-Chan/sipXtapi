#!/bin/bash

# Startup Script for Software Delivery Service
# Check for SUN(tm) JVM w/ HotSpot support

CONFIG_DEFS="@SIPXPBXCONF@/config.defs"
jars=@SIPXCONFIGLIB@

CONFIG_FILES="\
  @SIPXPBXCONF@/sds.props \
  @SIPXPBXCONF@/sds-config \
  "

# If the "config.defs" file exists and the <name>.in file exists for a
# configuration file, then run the config preprocessor to generate the
# fully resolved configuration file.
if [ -f "$CONFIG_DEFS" ]
then
  for i in $CONFIG_FILES ; do
    if [ -f "${i}.in" ]
    then
       @bindir@/configpp --defs "${CONFIG_DEFS}" --in "${i}.in" --out "$i"
    fi
  done
fi

CLASSPATH=
for jar in ${jars}/*.jar ; do
   CLASSPATH=$CLASSPATH:$jar
done

LIB_HOME=@SIPXPBXDATA@
PDS_DEBUG=-Dpds.debug=false

echo $$ > @SIPXPBXRUN@/profilepublisher.pid

# Production command line
exec @JAVA@ $HOTSPOT -classpath $CLASSPATH $PDS_DEBUG -Djava.rmi.server.codebase="file:${jars}/profilepublisher.jar file:${jars}/common.jar file:${jars}/pgjdbc2.jar" -Dsds.props="@SIPXPBXCONF@/sds.props" -Djava.security.policy="file:@SIPXPBXCONF@/security.policy" -Djava.library.path=@libdir@ -Djava.naming.factory.initial=org.jnp.interfaces.NamingContextFactory -Djava.naming.factory.url.pkgs=org.jboss.naming:org.jnp.interfaces -Djava.naming.provider.url="localhost:1099" com.pingtel.pds.sds.SoftwareDeliveryServer $@
