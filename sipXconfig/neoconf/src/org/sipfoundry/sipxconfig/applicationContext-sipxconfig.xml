<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
	"http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
  <!--
  -  S Y S T E M  D I R E C T O R I E S
  -  evaluates system directory variables e.g. ${sysdir.*} in this file
  -->
  <bean id="sipxconfig.properties" class="org.springframework.core.io.ClassPathResource">
    <constructor-arg index="0"><value>sipxconfig.properties</value></constructor-arg>
  </bean>
  <bean id="sysdir" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location">
      <ref bean="sipxconfig.properties"></ref>
    </property>
  </bean>
  
  <!-- This is used in unit test environment only: we change dataSource.url using this mechanism -->
  <bean id="overrider" class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
    <property name="location">
      <ref bean="sipxconfig.properties"></ref>
    </property>
  </bean>
  <!--
  - P O S T G R E S
  -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName">
      <value>org.postgresql.Driver</value>
    </property>
    <property name="url">
      <value>jdbc:postgresql://localhost/SIPXCONFIG</value>
    </property>
    <property name="username">
      <value>postgres</value>
    </property>
  </bean>
  <!--
  - T R A N S A C T I O N  S U P P O R T
  -->
  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource">
      <ref local="dataSource"/>
    </property>
  </bean>
  <!--
  - H I B E R N A T E   F A C T O R Y
  -->
  <bean id="sessionFactory" class="org.sipfoundry.sipxconfig.common.DynamicSessionFactoryBean">
    <property name="dataSource">
      <ref local="dataSource"/>
    </property>
    <property name="mappingResources">
      <list>
        <value>org/sipfoundry/sipxconfig/admin/callgroup/callGroup.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/admin/callgroup/parkOrbit.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/admin/forwarding/ring.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/admin/admin.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/admin/backup.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/admin/dialplan/dialingRule.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/admin/dialplan/autoAttendant.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/common/common.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/conference/conference.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/gateway/gateway.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/phone/phone.hbm.xml</value>
        <value>org/sipfoundry/sipxconfig/setting/setting.hbm.xml</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect"> org.hibernate.dialect.PostgreSQLDialect</prop>
        <prop key="hibernate.query.substitutions">true=1 false=0</prop>
        <!-- prop key="hibernate.show_sql">true</prop -->
      </props>
    </property>
    <property name="baseClassBeanIds">
      <list>
        <value>gwGeneric</value>        
        <value>genericPhone</value>        
      </list>      
    </property>
    <!-- unless otherwise specified property nameLikeThis will be mapped to column name_like_this -->
    <property name="namingStrategy">
      <bean class="org.sipfoundry.sipxconfig.common.ImprovedNamingStrategy"/>      
    </property>
  </bean>
  
  <!--
  - H I B E R N A T E   S E S S I O N
  -->
  <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
    <property name="sessionFactory">
      <ref bean="sessionFactory"/>
    </property>
  </bean>

  
  <bean id="daoEventDispatcherInterceptor" parent="hibernateInterceptor">
    <property name="entityInterceptorBeanName">
      <value>daoEventDispatcher</value>
    </property>    
  </bean>

  <bean id="daoEventDispatcher" class="org.sipfoundry.sipxconfig.common.DaoEventDispatcher">
  </bean>

  <!-- springInstantiator will force hibernate to create new objects through Spring -->
  <bean id="springInstantiator" class="org.sipfoundry.sipxconfig.common.SpringHibernateInstantiator">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <!--
    - Use this instead of 'hibernateInterceptor' when you want to
    - load spring beans from hibernate mappings.  See common/common.beans.xml for example
    -->
  <bean id="springHibernateInterceptor" parent="daoEventDispatcherInterceptor">
    <property name="entityInterceptorBeanName">
      <value>springInstantiator</value>
    </property>    
  </bean>

  <bean id="abstractDao" abstract="true">
    <property name="interceptorNames">
      <list>
        <value>springHibernateInterceptor</value>
      </list>
    </property>
  </bean>

  <!--
  - V E L O C I T Y
  -->
  <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
    <property name="resourceLoaderPath"><value>file:${sysdir.etc}</value></property>
  </bean>
    
</beans>
