<project name="jsetup" default="default">
  <property name="test.src.dir" value="test"/>
  <property name="checkstyle.severity" value="error"/>
  <property name="project.dir" value="jsetup"/>
  <import file="../ant-targets.xml"/>
  <property name="test.war" value="${test.classes.dir}/war"/>
  <patternset id="test-ui.classes" includes="**/*TestUi.class"/> 
  
  <!-- common path unit tests need that interfaces w/sipXconfig lib 
       all spring jars at this point -->
  <path id="compile.dependencies">
    <pathelement path="${servlet.jar}"/>
    <pathelement path="${tapestry.jar}"/>
    <pathelement path="${tapestry-contrib.jar}"/>
    <pathelement path="${tapestry-checkboxes.jar}"/>
    <pathelement path="${ognl.jar}"/>
  </path>

  <!-- common path unit tests need that interfaces w/sipXconfig lib 
       all spring jars at this point -->
  <path id="runtime.dependencies">
    <pathelement path="${bsf.jar}"/>
    <pathelement path="${commons-beanutils.jar}"/>
    <pathelement path="${commons-collections.jar}"/>
    <pathelement path="${commons-fileupload.jar}"/>
    <pathelement path="${commons-io.jar}"/>
    <pathelement path="${commons-lang.jar}"/>
    <pathelement path="${commons-logging.jar}"/>
    <pathelement path="${jakarta-oro.jar}"/>
    <pathelement path="${jasper-compiler.jar}"/>
    <pathelement path="${jasper-runtime.jar}"/>
    <pathelement path="${javassist.jar}"/>
    <pathelement path="${servlet.jsp.jar}"/>
  </path>

  <path id="base.path">
    <pathelement path="${sipxconfig.jar}"/>
    <path refid="compile.dependencies"/>
    <path refid="runtime.dependencies"/>
    <pathelement path="${commons-digester.jar}"/>
    <pathelement path="${easymock.jar}"/>
    <pathelement path="${easymockclassextension.jar}"/>
    <pathelement path="${httpunit.jar}"/>
    <pathelement path="${jwebunit.jar}"/>
    <pathelement path="${jetty.jar}"/>
    <pathelement path="${servlet.jsp.jar}"/>
    <pathelement path="${jasper-runtime.jar}"/>
    <pathelement path="${jasper-compiler.jar}"/>
    <pathelement path="${tidy.jar}"/>
    <pathelement path="${commons-codec.jar}"/>
  </path>
  <property name="classpath" refid="base.path"/>

  <target name="init" depends="ant-targets.init">
    <mkdir dir="${dist.dir}/war-root"/>
  </target>

  <!-- D E F A U L T -->
  <target name="default" depends="war"/>
	
  <!-- W A R -->	
  <target name="war" depends="init,compile" 
    description="assemble sipxsetup for setup war">
  	<condition property="include.testpage">
  		<equals arg1="${debug}" arg2="on"/>
  	</condition>
    <war warfile="${sipxsetup.war}" webxml="context/WEB-INF/web.xml" 
      basedir="${dist.dir}/war-root">
      <!-- include assets:css/images -->
      <fileset dir="context">
        <include name="css/**/*"/>
        <include name="images/**/*"/>
      </fileset>
      <webinf dir="context/WEB-INF">
        <!-- avoid warning about already there -->
        <exclude name="web.xml"/>
        <!-- exclude Test.page unless we debug -->
      	<present present="srconly" targetdir="${ant.1.4.1}/src/main"/>      	
        <exclude name="**/TestPage.*" unless="include.testpage"/>
      </webinf>
      <classes dir="${classes.dir}"/>
      <classes dir="${src.dir}">
        <include name="**/*.xml"/>
        <include name="**/*.wsdl"/>
        <include name="**/*.properties"/>
      </classes>
      <classes dir="etc">
        <include name="*.xml"/>
        <include name="*.properties"/>
      </classes>
    </war>
  </target>
		
  <target name="install" depends="war" 
    description="Copy war file into lib dir and web related configuration files">

    <!-- startup script -->
    <copy file="bin/sipxsetup.sh.in" 
      tofile="${dest.dir}${bin.dir}/sipxsetup.sh"/>
    <replace file="${dest.dir}${bin.dir}/sipxsetup.sh" 
      propertyfile="${top.build.dir}/build.properties">
      <replacefilter token="@sipxpbx.conf.dir@" property="sipxpbx.conf.dir"/>
      <replacefilter token="@sipxconfig.lib.dir@" property="sipxconfig.lib.dir" 
       />
      <replacefilter token="@sipxpbx.data.dir@" property="sipxpbx.data.dir"/>
      <replacefilter token="@sipxpbx.log.dir@" property="sipxpbx.log.dir"/>    	
      <replacefilter token="@bin.dir@" property="bin.dir"/>
      <replacefilter token="@sipxpbx.run.dir@" property="sipxpbx.run.dir"/>
      <replacefilter token="@sipxpbx.tmp.dir@" property="sipxpbx.tmp.dir"/>
      <replacefilter token="@sipxpbx.user@" property="sipxpbx.user"/>
      <replacefilter token="@sipxconfig.db.user@" property="sipxconfig.db.user"/>
    </replace>
    <chmod file="${dest.dir}${bin.dir}/sipxsetup.sh" perm="ugo+x"/>

    <!-- config -->
    <mkdir dir="${dest.dir}${sipxpbx.conf.dir}"/>
    <copy todir="${dest.dir}${sipxpbx.conf.dir}">
      <fileset dir="etc">
        <include name="sipxsetup-jetty.xml"/>
      </fileset>
    </copy>
  	
    <copy todir="${dest.dir}${sipxpbx.data.dir}/lib">
      <fileset file="${sipxsetup.war}"/>
      <!-- redundant w/web project, may remove -->
      <fileset file="${tapestry.jar}"/>
      <fileset file="${tapestry-contrib.jar}"/>
      <fileset file="${tapestry-checkboxes.jar}"/>
      <fileset file="${ognl.jar}"/>
    </copy>
  </target>	
	
  <target name="run" depends="test-war" 
    description="Runs Jetty on current code, development purpose only">
  	<echo/>
    <echo>Web UI will be available at URL:</echo>
  	<echo>  http://localhost:9999/sipxsetup/app?service=page/TestPage</echo>
  	<echo/>
    <java classname="org.sipfoundry.sipxconfig.site.JettyTestSetup" fork="true">
      <classpath refid="base.path"/>
      <classpath refid="test.path"/>
      <classpath location="${junit.jar}"/>
      <classpath location="${log4j.jar}"/>
      <sysproperty key="basedir" value="${basedir}"/>
    </java>
  </target>
  <target name="test-all" depends="ant-targets.test-all,test-ui"/>
  <target name="test-war" depends="default.deps,compile.test,war" 
    description="Creates a war file for unittests">
    <delete dir="${test.war}"/>
    <unwar src="${sipxsetup.war}" dest="${test.war}"/>
  </target>

  <!-- 
    - U N I T T E S T   W E B   U I
    -->
  <target name="test-ui" depends="test-war" 
    description="run junit tests for web interface">
    <junit fork="yes" forkmode="perBatch" haltonfailure="no" printsummary="on" 
      failureproperty="junit.failed">
      <classpath refid="test.path"/>
      <formatter type="plain"/>
      <formatter type="xml"/>
      <sysproperty key="basedir" value="${basedir}"/>
      <batchtest todir="${junit.results.dir}">
        <fileset dir="${test.classes.dir}">
          <patternset refid="test-ui.classes"/>
        </fileset>
      </batchtest>
    </junit>
    <fail if="junit.failed"/>
  </target>
  
</project>
