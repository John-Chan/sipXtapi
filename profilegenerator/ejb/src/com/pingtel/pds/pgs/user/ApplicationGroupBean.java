/*
 * 
 * 
 * Copyright (C) 2004 SIPfoundry Inc.
 * Licensed by SIPfoundry under the LGPL license.
 * 
 * Copyright (C) 2004 Pingtel Corp.
 * Licensed to SIPfoundry under a Contributor Agreement.
 * 
 * $$
 */


package com.pingtel.pds.pgs.user;

import javax.ejb.EntityBean;
import javax.ejb.EntityContext;
import javax.ejb.EJBException;

import com.pingtel.pds.pgs.common.ejb.JDBCAwareEJB;
import com.pingtel.pds.common.PDSException;

import java.util.Collection;


/**
 * ApplicationGroupBean is the EJ Bean implementation class
 * for ApplicationGroup.   Note: ApplicationGroup and
 * application set are synonomous.   We use the term
 * application set in the UI and docs.
 *
 * @author ibutcher
 */
public class ApplicationGroupBean extends JDBCAwareEJB
        implements EntityBean, ApplicationGroupBusiness {

//////////////////////////////////////////////////////////////////////////
// Constants
////


//////////////////////////////////////////////////////////////////////////
// Attributes
////

    /** id is an autogenerated PK for the ApplicationGroup (set) */
    public Integer id;

    /** name is the user-visible identifier for the ApplicationGroup */
    public String name;

    /** ApplicationGroups are owned by Organizations. */
    public Integer organizationID;


    private EntityContext mCTX;


//////////////////////////////////////////////////////////////////////////
// Construction
////


//////////////////////////////////////////////////////////////////////////
// Public Methods
////


    public Integer ejbCreate (String name, Integer organizationID )
            throws PDSException {

        id = new Integer ( this.getNextSequenceValue( "APP_GROUP_SEQ" ) );
        setName(name);
        this.organizationID = organizationID;

        return null;
    }

    public void ejbPostCreate ( String name,
                                Integer organizationID ) {}

    /**
     *  Standard EJB implementation
     */
    public void ejbLoad () {}

    /**
     *  Standard EJB implementation
     */
    public void ejbStore  () {}

    /**
     *  Standard EJB implementation
     */
    public void ejbRemove () {}

    /**
     *  Standard EJB implementation
     */
    public void ejbActivate () {}

    /**
     *  Standard EJB implementation
     */
    public void ejbPassivate () {}

    /**
     *  Standard EJB implementation
     */
    public void setEntityContext ( EntityContext ctx ) {
        this.mCTX = ctx;
    }

    /**
     *  Standard EJB implementation
     */
    public void unsetEntityContext ( ) {
        this.mCTX = null;
    }

    // accessors/mutators
    /**
     * getID returns the PK or ID for this ApplicationGroup
     *
     * @return returns the PK or ID for this ApplicationGroup
     * @see #id
     */
    public Integer getID() {
        return this.id;
    }

    /**
     * getName returns the name of this ApplicationGroup.
     *
     * @return returns the name of this ApplicationGroup.
     * @see #name
     */
    public String getName() {
        return this.name;
    }

    /**
     * setName changes the name associated with the ApplicationGroup.  It
     * performs various validation checks, name can not be null or
     * exceed MAX_NAME_LEN.
     *
     * @param name new name for this ApplicationGroup
     * @throws PDSException is thrown if any of the validation rules are
     * broken.
     * @see #name
     * @see #MAX_NAME_LEN
     */
    public void setName (String name) throws PDSException {
        if (name == null || name.trim().length() == 0) {
            mCTX.setRollbackOnly();

            throw new PDSException(collateErrorMessages("E3030", new Object[]{"name"}));
        }
        if ( name != null && name.length() > MAX_NAME_LEN ) {
            mCTX.setRollbackOnly();

            throw new PDSException(
                collateErrorMessages(   "E3028",
                                        new Object[]{
                                            "name",
                                            new Integer(MAX_NAME_LEN)}));
        }

        Collection existing = null;

        try {
            existing = ((ApplicationGroupHome)mCTX.getEJBHome()).findByName(name);
        }
        catch (Exception e) {
            logFatal(e.getMessage());
            throw new EJBException(e.getMessage());
        }

        if (!existing.isEmpty()) {
            mCTX.setRollbackOnly();

            throw new PDSException(collateErrorMessages("E3041", new Object[]{name}));
        }

        this.name = name.trim();
    }

    /**
     * getExternalID returns a user-friendly idenitifier for this
     * ApplicationGroup.
     *
     * @return returns a user-friendly identifier.
     */
    public String getExternalID () {
        return this.name;
    }

    /**
     * getOrganizationID returns the PK of the Organization that
     * owns this ApplicationGroup.
     *
     * @return PK of the Organization that owns this ApplicationGroup.
     * @see #organizationID
     */
    public Integer getOrganizationID () {
        return this.organizationID;
    }



//////////////////////////////////////////////////////////////////////////
// Implementation Methods
////


//////////////////////////////////////////////////////////////////////////
// Nested / Inner classes
////


//////////////////////////////////////////////////////////////////////////
// Native Method Declarations
////


}
