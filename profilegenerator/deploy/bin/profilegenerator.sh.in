#!/bin/bash
#
# Copyright (C) 2004 SIPfoundry Inc.
# Licensed by SIPfoundry under the LGPL license.
#
# Copyright (C) 2004 Pingtel Corp.
# Licensed to SIPfoundry under a Contributor Agreement.

# Startup Script for Profile Generator Service
# Check for SUN(tm) JVM w/ HotSpot support

Action=RUN
Status=0
Args=""

while [ $# -ne 0 ]
do
    case ${1} in
        --configtest)
            Action=CONFIGTEST
            ;;

        *)
            Args="$Args $1"
            ;;
    esac           

    shift # always consume 1
done

CONFIG_DEFS="@sipxpbx.conf.dir@/config.defs"

CONFIG_FILES="\
  @sipxpbx.conf.dir@/pgs.props
  @sipxpbx.conf.dir@/topology.xml
  "

# If the "config.defs" file exists and the <name>.in file exists for a
# configuration file, then run the config preprocessor to generate the
# fully resolved configuration file.
if [ -f "$CONFIG_DEFS" ]
then
  for i in $CONFIG_FILES ; do
    if [ -f "${i}.in" ]
    then
       @bin.dir@/configpp --defs "${CONFIG_DEFS}" --in "${i}.in" --out "$i"
    fi
  done
fi

if [ ${Action} = CONFIGTEST ]
then
    # comment out until (benign?) xml errors are resolved
    #@bin.dir@/sipx-validate-xml @sipxpbx.conf.dir@/topology.xml
    #$Status=$(($Status+$?))
    exit $Status
fi

# Needed for Jasper page compiler (possibly for other components as well)
export JAVA_HOME=`@bin.dir@/sipx-config --jdk`

echo $$ > @sipxpbx.run.dir@/profilegenerator.pid

if [ "x${JBOSS_HOME}" = "x" ]; then
	JBOSS_HOME=@jboss.home@
fi

# Production command line
cd ${JBOSS_HOME}/bin

# portions extracted from jboss's run.sh, stopped trying to 
# run jboss's startup script because too hard to kill by
# pid

DIRNAME=`dirname $0`
PROGNAME=`basename $0`

#
# Helper to complain.
#
warn() {
    echo "${PROGNAME}: $*"
}

# Use the maximum available, or set MAX_FD != -1 to use that
MAX_FD="maximum"

# Increase the maximum file descriptors if we can
MAX_FD_LIMIT=`ulimit -H -n`
if [ $? -eq 0 ]; then
if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ]; then
    # use the system max
    MAX_FD="$MAX_FD_LIMIT"
fi

ulimit -n $MAX_FD
if [ $? -ne 0 ]; then
    warn "Could not set maximum file descriptor limit: $MAX_FD"
fi
else
	warn "Could not query system maximum file descriptor limit: $MAX_FD_LIMIT"
fi

# Setup the JVM
if [ "x$JAVA" = "x" ]; then
	JAVA="$JAVA_HOME/bin/java"
fi

# Setup the classpath
runjar="$JBOSS_HOME/bin/run.jar"
if [ ! -f $runjar ]; then
    warn "Missing required file: $runjar"
    exit 1
fi
JBOSS_BOOT_CLASSPATH="$runjar"

# Include the JDK javac compiler for JSP pages. The default is for a Sun JDK
# compatible distribution which JAVA_HOME points to
if [ "x$JAVAC_JAR" = "x" ]; then
    JAVAC_JAR="$JAVA_HOME/lib/tools.jar"
fi

if [ "x$JBOSS_CLASSPATH" = "x" ]; then
    JBOSS_CLASSPATH="$JBOSS_BOOT_CLASSPATH:$JAVAC_JAR"
else
    JBOSS_CLASSPATH="$JBOSS_CLASSPATH:$JBOSS_BOOT_CLASSPATH:$JAVAC_JAR"
fi

# append profilegenerator opts
JAVA_OPTS="-server $JAVA_OPTS $PROFILEGENERATOR_OPTS"


# setup security manager
PF=../server/@jboss.server.conf@/conf/server.policy
JAVA_OPTS="$JAVA_OPTS -Djava.security.manager -Djava.security.policy=$PF"

# Setup the java endorsed dirs
JBOSS_ENDORSED_DIRS="$JBOSS_HOME/lib/endorsed"

exec "$JAVA" $JAVA_OPTS \
	-Dprogram.name="$PROGNAME" \
	-Djava.endorsed.dirs="$JBOSS_ENDORSED_DIRS" \
      -classpath "$JBOSS_CLASSPATH" \
      org.jboss.Main -c @jboss.server.conf@
