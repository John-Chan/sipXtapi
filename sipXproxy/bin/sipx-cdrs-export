#!/usr/bin/env ruby
#
# Copyright (C) 2006 SIPfoundry Inc.
# Licensed by SIPfoundry under the LGPL license.
# 
# Copyright (C) 2006 Pingtel Corp.
# Licensed to SIPfoundry under a Contributor Agreement.
#
##############################################################################

# system requires
require 'getoptlong'


# Parse command-line options
#   file:  pathname for file into which to write CDRs, defaults to cdrs.csv
opts = GetoptLong.new(
  [ "--file",  "-f", GetoptLong::OPTIONAL_ARGUMENT ],
  [ "--help",  "-h", GetoptLong::NO_ARGUMENT ]
)

# Set the default file for output
path = 'cdrs.csv'

# Extract option values
# Convert start and end strings to date/time values.
opts.each do |opt, arg|
  case opt

  when "--file"
    path = arg
 
  when "--help"
    print <<EOT
Export CDRs in CSV format
Usage: export-cdrs [--file "pathname"] [--help]

  --file "pathname" The pathname of the file to save CDRs to, in CSV format.
                    Defaults to "cdrs.csv".
EOT
    exit

  end
end 

# Default the filename
path ||= 'cdrs.csv'

# Write the CSV file header
File.open(path, 'w') do |file|
  file.puts('ID,Caller,Callee,Start Time,Connect Time,End Time,Duration,' +
            'Termination,Failure Status,Failure Reason,Call Direction')
end

# Write out all CDRs.
# Ideally we would just do a "select *" from the view.  However, the "duration" 
# column is of type "interval" which doesn't map gracefully to CSV format.  So
# use "extract(epoch from duration)" to convert it to a simple count of seconds.
cmd = "psql -At -F \",\" SIPXCDR -U postgres -c \"select " +
  "id, caller_aor, callee_aor, start_time, connect_time, end_time, " +
  "extract(epoch from duration), termination, failure_status, failure_reason, " +
  "call_direction from view_cdrs_with_call_direction\" >> " + path
exec(cmd)
