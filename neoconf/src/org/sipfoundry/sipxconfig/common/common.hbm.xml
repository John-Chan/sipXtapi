<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.sipfoundry.sipxconfig.common" default-lazy="false">

  <!-- 
    - User
	-
	- To enforce uniqueness of all SIP usernames, they are all stored in a single table
	- "user_name".  The userName and aliases for users are SIP usernames so they live in
	- that table.  That's why we are using entity associations rather than, for example,
	- storing the userName directly in the user row as was done previously.
	-
	- Ideally the table would be named "user" (singular) rather than "users",
	- like other tables, but "user" exists already as a PostgreSQL internal table.
    -->
  <class name="User" table="users">
    <id name="id" column="user_id" type="int" unsaved-value="-1">
      <generator class="sequence">
        <param name="sequence">user_seq</param>
      </generator>
    </id>
    <property name="firstName"/>
    <property name="pintoken"/>
    <property name="sipPassword"/>
    <property name="lastName"/>
	<many-to-one name="userNameObject" class="UserName"
		column="user_name_id" cascade="all" unique="true" not-null="true"/>
    <set name="aliasObjects" table="user_alias" cascade="all-delete-orphan">
      <key column="user_id"/>
	  <many-to-many class="UserName" column="user_name_id"/>
    </set>	
    <many-to-one cascade="all" name="valueStorage" column="value_storage_id"
      class="org.sipfoundry.sipxconfig.setting.ValueStorage"/>
  	<set name="groups" table="user_group" sort="natural" >
      <key column="user_id"/>
      <many-to-many column="group_id" class="org.sipfoundry.sipxconfig.setting.Group"/>
    </set>
  </class>

  <!-- 
    - UserName
	-
	- Represents SIP usernames for both human users and services like the auto attendant
    -->
  <class name="UserName" table="user_name">
    <id name="id" column="user_name_id" type="int" unsaved-value="-1">
      <generator class="sequence">
        <param name="sequence">user_name_seq</param>
      </generator>
    </id>
    <property name="name" unique="true" not-null="true"/>
  </class>

  <!-- 
    - ExtensionPool
    -->
  <class name="ExtensionPool" table="extension_pool">
    <id name="id" column="extension_pool_id" type="int" unsaved-value="-1">
      <generator class="sequence">
        <param name="sequence">extension_pool_seq</param>
      </generator>
    </id>
    <property name="enabled"/>
    <property name="name"/>
    <property name="firstExtension"/>
    <property name="lastExtension"/>
    <property name="nextExtension"/>
  </class>

  <query name="userByName">
    <![CDATA[select u from User u join u.userNameObject userName where userName.name = :userName]]>
  </query>

  <query name="userByAlias">
    <![CDATA[select u from User u join u.aliasObjects alias where alias.name = :alias]]>
  </query>
	  
  <query name="userByNameOrAlias">
    <![CDATA[select u from User u left outer join u.aliasObjects alias join u.userNameObject userName where userName.name = :userNameOrAlias or alias.name = :userNameOrAlias]]>
  </query>
	  
  <query name="userIdsByNameOrAlias">
    <![CDATA[select distinct u.id from User u left outer join u.aliasObjects alias join u.userNameObject userName where userName.name = :value or alias.name = :value]]>
  </query>  
	  
  <query name="userGroupMembers">
    <![CDATA[from User u where u.groups.id = :groupId]]>
  </query>
	  
  <query name="extensionPoolByName">
    <![CDATA[from ExtensionPool pool where pool.name = :name]]>
  </query>
  
  <query name="userCount">
    <![CDATA[select count(*) from User]]>
  </query>
	
</hibernate-mapping>
