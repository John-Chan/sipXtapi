<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  - Example mappingrules.xml file
  - The xml schema definition for this is in sipXcommserverLib/meta/urlmap.xsd
  -->
<mappings xmlns='http://www.sipfoundry.org/sipX/schema/xml/urlmap-00-00'>
  <!-- mappings may contain one or more hostMatch elements -->
  <hostMatch>
    <!-- 
    - A hostMatch may contain multiple hostPattern elements, followed by a userMatch element.
    -   The host part of the target URI is compared with each hostPattern until one matches.
    - Despite the name, the contents of a hostPattern is not a pattern;
    -   The host part of the target URI must match the content of a hostPattern exactly.
    -->
    <hostPattern>example.edu</hostPattern>
    <hostPattern>sipx.example.edu</hostPattern>
    <hostPattern>10.1.20.20</hostPattern>

    <!-- 
    - Following the hostPattern elements are one or more userMatch elements.
    - Each is evaluated until one matches.
    -->
    <userMatch>
      <!--
      - A userMatch may contain a series of userPattern elements
      - Each is evaluated until one matches.
      - The contents of a userPattern is a sequence of characters that is matched 
      - against the entire user part of the target URI.  
      - The following characters are special in a userPattern:
      -    x   matches any single character
      -    .   matches any sequence of characters
      -   []   encloses a set of characters that match a single character
      - Any other character matches only if it exactly matches the character
      - in the target URI.
      - Any of the special characters may be escaped by prefixing with a backslash (\),
      - in which case it matches only if it exactly matches the character in the target URI. 
      - Any other use of backslash is invalid, and is ignored.
      -->
      <userPattern>2xxxx</userPattern> <!-- 'x' represents any digit -->

      <!--
      - Following the userPattern elements are one or more permissionMatch elements
      - If any userPattern matched, each permissionMatch is evaluated until one matches.
      -->
      <permissionMatch>
        <!-- the target URI must have one of the permissions in permissions.xml -->
        <permission>Voicemail</permission>

        <!-- if all tests pass, tranform the URI to a new target contact -->
        <transform>
          <!--
            - This example transforms URI to Deposit to Users Voice Mail
            - {digits} substitutes the user part of the target URI
            - {mediaserver} and {voicemail} substitute values from
            - the registrar-config file (SIP_REGISTRAR_MEDIA_SERVER and 
            - SIP_REGISTRAR_VOICEMAIL_SERVER respectively).
            -
            - The complete output SIP URL.
            -
            - In this element only, the value must be escaped as it would be when
            - transmitted in a SIP message.
            -
            - {digits-escaped} is the same substitution as above but HTTP
            - escaped (mainly for plus sign, so +5551212 comes through as
            - a http URL parameter correctly)
            -->
          <url>&lt;sip:{digits}@{mediaserver};voicexml={voicemail}%2Fsipx-cgi%2Fvoicemail%2Fmediaserver.cgi%3Faction%3Ddeposit%26mailbox%3D{digits-escaped}&gt;;q=0.1</url>
        </transform>

      </permissionMatch>
    </userMatch>

    <userMatch>
      <!-- the user part of the target URI must match -->
      <userPattern>888711xxxx</userPattern> <!-- 'x' represents any digit -->

      <permissionMatch>
        <!-- no permission checks for this one -->

        <transform>
          <!--
            - See the transform descrption in the schema file for other
            - possiblities.
            -
            - change direct inward dial number to extension
            - {vdigits} substitutes from the first variable
            - digit to the end of the user part.  Alternatively
            - {digits} can be used which substitutes the userId
            - part of the incoming request URI.
            -->
          <user>{vdigits}</user>
        </transform>

      </permissionMatch>
    </userMatch>

  </hostMatch>
</mappings>
