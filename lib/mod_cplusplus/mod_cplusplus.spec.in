# Build an RPM for mod_cplusplus.

Name: mod_cplusplus
Version: 1.5.2
Release: 1

Summary: C++ support routines for writing Apache handlers.
License: See file COPYING
Group: Internet/WWW/Servers
Vendor: SIPfoundry
Packager: SIPfoundry <sipx-dev@sipfoundry.org>
URL: http://modcplusplus.sourceforge.net

Source: %{name}-%{version}.tar.gz
# Since the patch files will be put into SOURCES with the files of other
# packages, it is desirable that they are prefixed by the package name.
#Patch1: mod_cplusplus.patch.configure.in
#Patch2: mod_cplusplus.patch.apache_handler.cpp

Requires: httpd >= 2.0
BuildRequires: httpd-devel >= 2.0

Prefix: %_prefix
BuildRoot: %{_tmppath}/%name-%version-root

# Establish where Apache is located.
# %apache2_home is the location of build/config_vars.mk
# %apache2_mod is the modules directory
# %apache2_include is the location of httpd.h.
%define apache2_home @APACHE2_HOME@
%define apache2_mod @APACHE2_MOD@
%define apache2_include @APACHE2_INCDIR@
# %apache2_mmn is the "module magic number", the version number of the API
# that modules must interface to.
%define apache2_mmn @APACHE2_MMN@
# %apache2_version is the version number of Apache that mod_cplusplus was
# built against
%define apache2_version @APACHE2_VERSION@

# Ensure that mod_cplusplus is installed with a compatible version of Apache.
Requires: httpd-mmn = %{apache2_mmn}
# Help the user guess what versions of Apache might work with mod_cplusplus.
Provides: mod_cplusplus_apache_version
########  = %{apache2_version}

%description
Easily implement object oriented apache-2.0 handlers with C++
including all the standard phases of the request cycle, input filters,
output filters, and protocol handlers.

%prep
# You have to copy the the tar and patch files to .../SOURCES manually first.
# (There is probably a way to automate that.)
# The '-n mod_cplusplus' is because the tar doesn't unpack into the usual
# 'mod_cplusplus-1.3.1' directory.
#%setup -q -n mod_cplusplus
%setup

# Patch ./configure.in so that ./configure can find the Apache include files
# under Red Hat.
# (Note that ./configure has another problem that does not affect us:
# If it has to look in /usr/include/{apache2,httpd} to find httpd.h, then
# it sets HTTPD_DIR (the parent of .../modules) to /usr, when it
# should set it to /usr/lib/httpd.  But HTTPD_DIR seems to only be
# used in the 'install' make command group, which is not used for
# building the RPM.)
#%patch1 -p0

# If compiling with g++ 3.2.2, you will have to add
# '#include "apache_filters.h"' as the last #include at the top of
# src/apache_handler.cpp.
#%patch2 -p0

%build

./autogen.sh --with-httpd=%{apache2_home} --with-apxs=@APACHE2_APXS@

make

%install

mkdir -p ${RPM_BUILD_ROOT}%{apache2_mod}
cp src/.libs/libmod_cplusplus.so* ${RPM_BUILD_ROOT}%{apache2_mod}
mkdir -p ${RPM_BUILD_ROOT}%{apache2_include}
cp include/*.h ${RPM_BUILD_ROOT}%{apache2_include}

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(644,root,root,755)
# Make sure to keep COPYING in this list, because it's the license agreement.
%doc AUTHORS COPYING ChangeLog INSTALL NEWS README
%{apache2_include}/apache_filters.h
%{apache2_include}/apache_handler.h
%{apache2_include}/apache_output_buffer.h
%{apache2_include}/apache_protocol.h
%{apache2_include}/cpp_request.h
%{apache2_include}/cpp_server.h
%{apache2_include}/env_hash.h
%{apache2_include}/env_value.h
%{apache2_include}/mod_cplusplus.h
%{apache2_include}/request_env.h
%{apache2_mod}/libmod_cplusplus.so

%changelog
